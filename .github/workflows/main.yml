# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    #installs a version of python, but I need this if deploying to a severless Python Lambda?
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    
    #credentials to connect to AWS
    - name: Configure AWS credentials from Production account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        profile_name: default
        project_name: first_repo_project
        runtime: python3.8
        s3_bucket: lambdatestdar
    
    # Runs a set of commands using the runners shell; THIS DOESN'T WORK
    - name: Run a multi-line script
      run: |
          sudo apt-get update
          sudo apt-get install python3.8 -y
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
          cd ~
          mkdir -p build/python/lib/python3.8/site-packages
          sudo apt install python3-pip
          pip3 install pandas numpy -t build/python/lib/python3.8/site-packages
          pip3 install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib -t build/python/lib/python3.8/site-packages
          cd ~
          echo `ls`
          cd ~/build/python/lib/python3.8/site-packages
          git clone -b staging https://yashas.hiremath@digitalassetresearch.com:${{ secrets.GIT_CRED }}@github.com/DARDataServices/DAX_Package.git
          cd ~/build
          sudo apt-get install zip
          zip -r pandas_package.zip .
          sudo apt-get install awscli
          declare LNAME="pandas_package"
          aws lambda publish-layer-version --layer-name $LNAME --description "Testing again" --license-info "MIT" --zip-file fileb://pandas_package.zip --compatible-runtimes python3.6 python3.7 python3.8
          declare LARN=`aws lambda list-layer-versions --layer-name $LNAME --query 'LayerVersions[0].LayerVersionArn' | cut -d "\"" -f 2`
          declare FNAME="hello-world-test"
          aws lambda update-function-configuration --function-name $FNAME --layers $LARN
    # aws s3 cp pandas_package.zip s3://lambdatestdar/pandas_package.zip
          

         
    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
